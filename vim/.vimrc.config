" 標準添付プラグインを読み込まない {{{

let g:loaded_2html_plugin = 1
let g:loaded_dvorak_plugin = 1
let g:loaded_getscript = 1
let g:loaded_getscriptPlugin = 1
let g:loaded_logiPat = 1
let g:loaded_netrw = 1
let g:loaded_netrwFileHandlers = 1
let g:loaded_netrwPlugin = 1
let g:loaded_netrwSettings = 1
let g:loaded_rrhelper = 1
let g:loaded_spellfile_plugin = 1
let g:loaded_tar = 1
let g:loaded_tarPlugin = 1
let g:loaded_vimball = 1
let g:loaded_vimballPlugin = 1
let g:loaded_zip = 1
let g:loaded_zipPlugin = 1

" }}}

" デフォルトシェルをBashにする
" :help sh.vim
let g:is_bash = 1

" Markdown内での強調表示
" http://mattn.kaoriya.net/software/vim/20140523124903.htm
let g:markdown_fenced_languages = [
      \ 'css',
      \ 'diff',
      \ 'erb=eruby',
      \ 'html',
      \ 'javascript',
      \ 'js=javascript',
      \ 'json',
      \ 'ruby',
      \ 'sass',
      \ 'scss',
      \ 'sh',
      \ 'xml',
      \ ]

if exists('+shellslash')
  set shellslash
endif

if has('vertsplit')
  " カレントウィンドウの右に分割する
  set splitright
endif

if !has('gui_running')
  " マウス操作を受け付けない
  set mouse=
endif

if has('guess_encode')
  " 文字コードの自動判別
  set fileencodings=guess,ucs-bom,iso-2022-jp-3,utf-8,euc-jp,cp932
else
  " 開いたファイルに合っているものを順番に試す
  " https://github.com/Shougo/shougo-s-github/blob/b12435cdded41c7d77822b2a0a97beeab09b8d2c/vim/rc/init.rc.vim#L28-L29
  set fileencodings=ucs-bom,iso-2022-jp-3,utf-8,euc-jp,cp932
" set fileencodings=ucs-bom,utf-8,cp932,euc-jp,utf-16,utf-16le,iso-2022-jp
  set fileencodings=iso-2022-jp,ucs-bom,utf-8,euc-jp,cp932,default,latin1
endif

"set fileencoding=utf-8  " デフォルトの文字コード
"set fileformat=unix     " デフォルトの改行コード

if (v:version == 704 && has("patch785")) || v:version >= 705
  " 改行コードを勝手に付加しない
  set nofixeol
endif

if executable('pt')
  " ptコマンドを使用する場合の設定
  set grepprg=pt\ --nocolor\ --nogroup\ --smart-case
elseif has('win32') || has('win64')
  " grepコマンドでvimgrepを使用する
  set grepprg=internal
else
  " 外部grepを使用する場合の設定
  set grepprg=grep\ -niEH
endif

if filereadable($VIMRUNTIME . '/macros/matchit.vim')
  " 標準添付されているmatchit.vimを読み込む
  source $VIMRUNTIME/macros/matchit.vim
endif

" defaults.vimで設定される値を上書きする
set scrolloff=0

" 日本語のヘルプを優先して表示する
set helplang=ja,en

" ファイルパスなどを最長補完して全てのマッチを表示する
set wildmode=list:longest

" tagsファイルを上位のディレクトリにさかのぼって検索する
set tags&
set tags+=./tags;

" diffsplitは常に垂直分割する
set diffopt&
set diffopt+=vertical

set incsearch   " インクリメンタルサーチ
set ignorecase  " 大文字小文字を区別しない
set smartcase   " 検索文字列に大文字を含む場合は区別する
set wrapscan    " 最後まで検索したら先頭に戻る
set hlsearch    " 検索文字列をハイライトする

set expandtab    " タブの代わりに半角スペースを挿入する
set smartindent  " 高度な自動インデント

set tabstop=2      " タブ幅
set softtabstop=0  " 機能無効
set shiftwidth=2   " インデント幅

set nobomb  " BOMを付加しない
set hidden  " バッファを閉じないで非表示にする

" 候補が1つだけの場合もポップアップメニューを表示する
set completeopt&
set completeopt+=menuone,noinsert,noselect

" プレビューウィンドウを表示しない
set completeopt-=preview

" タブや改行などをを指定した記号で表示
" tab      タブ文字
" eol:     行末
" trail:   行末の半角スペース
" extends: 折り返しされた行の末尾
set listchars=tab:>.,eol:$,trail:_,extends:\

" バックスペースでいろいろ消せるように
set backspace=indent,eol,start

" シンタックスハイライトを200桁までに制限する
set synmaxcol=200

set number        " 行番号を表示する
set nowrap        " 折り返ししない
set showcmd       " コマンドを最下部に表示する
set shortmess&
set shortmess+=I  " 起動時のメッセージを表示しない

set ttyfast     " 高速ターミナル接続を行なう
"set lazyredraw  " キーボードから実行されないコマンドの実行で再描画しない

" 一部の全角文字を全角の幅で扱う
if exists('multi_byte')
  set ambiwidth=double
endif

" 折りたたみをインデントでする
set foldmethod=indent

" ステータスラインを常に表示する
set laststatus=2

" ステータスラインの表示を変更
set statusline=%n\:%y%F\ \|%{(&fenc!=''?&fenc:&enc).'\|'.(&ff=='dos'?'crlf':&ff=='mac'?'cr':'lf').'\|'}%m%r%=<%l:%v>

" バックアップファイルの保存先を変更 {{{

if exists('*mkdir') && !isdirectory($HOME . '/.vim/backup')
  call mkdir($HOME . '/.vim/backup', 'p')
endif

set backupdir=~/.vim/backup,.,~/tmp,~/

" }}}

" スワップファイルの保存先を変更 {{{

if exists('*mkdir') && !isdirectory($HOME . '/.vim/swap')
  call mkdir($HOME . '/.vim/swap', 'p')
endif

set directory=~/.vim/swap,.,~/tmp,/var/tmp,/tmp

" }}}

" アンドゥファイルの保存先を指定する {{{

if exists('*mkdir') && !isdirectory($HOME . '/.vim/undo')
  call mkdir($HOME . '/.vim/undo', 'p')
endif

set undodir=~/.vim/undo,.,~/tmp,~/

" }}}

" vim:ft=vim:fdm=marker:fen:
