" 論理行でなく表示行で移動する
nnoremap <silent> j gj
vnoremap <silent> j gj

nnoremap <silent> k gk
vnoremap <silent> k gk

"nnoremap <silent> $ g$
"vnoremap <silent> $ g$

"nnoremap <silent> ^ g^
"vnoremap <silent> ^ g^

"nnoremap <silent> 0 g0
"vnoremap <silent> 0 g0

" very magicをonにする
" http://deris.hatenablog.jp/entry/2013/05/15/024932
nnoremap / /\v
nnoremap ? ?\v

" diff系
nnoremap ,dg :<C-u>diffget<CR>
nnoremap ,do :<C-u>diffoff<CR>
nnoremap ,dO :<C-u>diffoff!<CR>
nnoremap ,dt :<C-u>diffthis<CR>
nnoremap ,du :<C-u>diffupdate<CR>

" F1を無効化
noremap <F1> <Nop>
noremap! <F1> <Nop>

" (, )でバッファの移動
nnoremap <silent> ( :<C-u>bprevious<CR>
nnoremap <silent> ) :<C-u>bnext<CR>

" バッファ番号とフルパスを表示する
nnoremap <C-g> 2<C-g>

" grepをする
command! -nargs=1 Grep execute "silent! grep! '<args>' | redraw! | copen"
nnoremap ,gr :<C-u>Grep<Space>

" C-kでオムニ補完
inoremap <C-k> <C-x><C-o>

" Tabで補完時に次の候補へ移動
inoremap <expr> <Tab> pumvisible() ? "\<C-n>" : "\<Tab>"

" S-Tabで補完時に前の候補へ移動
inoremap <expr> <S-Tab> pumvisible() ? "\<C-p>" : "\<S-Tab>"

" Enterで補完時に決定
inoremap <expr> <CR> pumvisible() ? "\<C-y>" : "\<CR>"

if executable('ranger') && has('terminal') && has('job') && has('channel')
  " Vimの中でrangerを実行してファイルを開くときはホストのVimでファイルを開く
  nnoremap <expr> ,vf
        \ ':<C-u>terminal ++close ranger ' .
        \ '--cmd="map \<enter\> open_file_via_vim" ' .
        \ '--cmd="map \<right\> open_file_via_vim" ' .
        \ '--cmd="map l open_file_via_vim" ' .
        \ '"' . expand('%:p:h') . '"<CR>'
endif

" vim:ft=vim:fdm=marker:fen:
