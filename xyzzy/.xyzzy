;---------------------------------------------------------------------
; キーバインド
;---------------------------------------------------------------------

;;; winkey.l
(load-library "winkey")

;;; C-aですべて選択
(global-set-key #\C-a 'selection-whole-buffer)

;;; C-F4でバッファを閉じる
(global-set-key #\C-F4 'close-selected-buffer)

;;; M-F4でxyzzyを終了
(global-set-key #\M-F4 'kill-xyzzy)

;;; Homeでキャレットを左端へ
(global-set-key #\Home 'beginning-of-line)

;;; Endでキャレットを右端へ
(global-set-key #\End 'end-of-line)

;;; C-F5で検索ダイアログ
(global-set-key #\C-F5 'search-dialog)

;;; C-x C-F5でGrepダイアログ
(global-set-key '(#\C-x #\C-F5) 'grep-dialog)

;;; C-F6で置換ダイアログ
(global-set-key #\C-F6 'replace-dialog)

;;; C-x C-F6でGresregダイアログ
(global-set-key '(#\C-x #\C-F6) 'gresreg-dialog)

;;; C-x jで指定行へ移動
(global-set-key '(#\C-x #\j) 'goto-line-dialog)

;;; C-x vで矩形貼り付け
(global-set-key '(#\C-x #\v) 'paste-rectangle-from-clipboard)

;;; C-x F2で関数一覧
(global-set-key '(#\C-x #\F2) 'list-function)

;;; C-TAB で次のバッファへ
(global-set-key #\C-F23 'next-buffer)

;;; S-C-TAB で前のバッファへ
(global-set-key #\C-F24 'previous-buffer)

;;; C-x C-5でフレームを新規作成
(global-set-key '(#\C-x #\C-5) 'new-pseudo-frame)

;;; C-x C-0でカレントフレームを削除
(global-set-key '(#\C-x #\C-0) 'delete-pseudo-frame)

;;; C-x S-C-Rightで次のフレームへ
(global-set-key '(#\C-x #\S-C-Right) 'other-pseudo-frame)

;;; C-x S-C-Leftで前のフレームへ
(global-set-key '(#\C-x #\S-C-Left) 'previous-pseudo-frame)

;;; C-x C-TABで次のフレームへ
(global-set-key '(#\C-x #\C-F23) 'other-pseudo-frame)

;;; C-x S-C-TABで前のフレームへ
(global-set-key '(#\C-x #\C-F24) 'previous-pseudo-frame)

;;; C-F23にC-TABのふりをさせる
(set-extended-key-translate-table exkey-C-tab #\C-F23)

;;; C-F24にS-C-TABのふりをさせる
(set-extended-key-translate-table exkey-S-C-tab #\C-F24)

;---------------------------------------------------------------------
; 拡張子とモードの設定
;---------------------------------------------------------------------

;;; *.dpr,lpr,pas,pp - objectpascal-mode
(pushnew '("\\.\\(dpr\\|lpr\\|pas\\|pp\\)$" . pascal-mode) *auto-mode-alist* :test 'equal)

;;; *.xml,xsl,xul,mxml - html-mode
(pushnew '("\\.\\(xml\\|xsl\\|xul\\|mxml\\)$" . html-mode) *auto-mode-alist* :test 'equal)

;;; .xyzzy - lisp-mode
(pushnew '("\\.xyzzy$" . lisp-mode) *auto-mode-alist* :test 'equal)

;---------------------------------------------------------------------
; 外部アプリケーションの設定
;---------------------------------------------------------------------

;;; diffのパス設定
#|
(setq ed::*diff-command-name*
      (map-slash-to-backslash
       (get-short-path-name
	(merge-pathnames "bin/diff.exe" (si:system-root)))))
|#

;---------------------------------------------------------------------
; ネットインストーラ
;---------------------------------------------------------------------

#|
;;; net-installer
(require "ni/setup")

;;; 自動設定を利用する
(ni-autoload)

;;; プロキシの設定
;;;(setq ni::*http-proxy-host* "proxy.host")
;;;(setq ni::*http-proxy-port* 8080)
;(setq ni::*http-proxy-host* )
;(setq ni::*http-proxy-port* )
|#

;---------------------------------------------------------------------
; 拡張Lisp
;---------------------------------------------------------------------

#|
;;; css-enhance
(require "css-enhance")

;;; diff-buffer
(require "diff-buffer")

;;; chcolor
(require "chcolor")
(global-set-key '(#\C-x #\h) 'chcolor-select-file)
(setq *chcolor-ini-dir* (concat (si:system-root) "color/"))

;;; paren
(require "paren")
(turn-on-global-paren)
(add-hook 'ed::*diff-mode-hook* 'turn-off-paren)
|#
